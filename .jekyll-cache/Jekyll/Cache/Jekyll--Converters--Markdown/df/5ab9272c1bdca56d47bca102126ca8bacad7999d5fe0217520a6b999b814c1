I"d<!-- JPN: updated fig path here manually for plots to show -->

<h2 id="assumptions--for-debugging">Assumptions – FOR DEBUGGING</h2>

<ol>
  <li>Everybody has installed R and R studio</li>
  <li>They have been able to run the install script we sent them and have all packages installed</li>
  <li>They <em>do</em> need an intro to the layout of RStudio, and what everything does.</li>
</ol>

<h2 id="getting-to-know-r-and-rstudio">Getting to know R and RStudio</h2>

<p><span style="color:magenta">A good bit of this might be more suitable to the Setup section as it’s got a lot about the setup and running of Rstudio.</span></p>

<h3 id="outline-for-this-section"><span style="color:magenta">Outline for this section</span></h3>
<ol>
  <li><span style="color:magenta">Let’s open RStudio </span></li>
  <li><span style="color:magenta">Where is the console? (screen shot) Vocab: <em>console</em></span></li>
  <li><span style="color:magenta">Let’s use RStudio as a calculator by putting numbers into the console</span></li>
</ol>

<p><span> I try this </span></p>

<p>In this episode we’ll cover the basics of using R, which is a programming language for statistics, data analysis, and data visualization. In the past decade or so, R has become very popular in both science and business, largely because (1) it is free, and (2) thousands of people have written new code extending its functionality, and that code is also free. If you perform an analysis in R, you can share that analysis so that anyone in the world can reproduce it without having to purchase proprietary software.</p>

<p>If you’re already proficient with Excel, you will probably already know how to accomplish a lot of what we are doing in this episode using Excel instead of R. One reason why we are teaching you this material, however, is to get you comfortable with R since we will be using R for geospatial analysis (which is not so easy in Excel).</p>

<p>In this lesson, we will be making use of another software called “RStudio” as a way to interact with the programming language R.  RStudio makes writing our programs more user-friendly.  <strong>Some sort of analogy here would be grand</strong></p>

<p>We launch RStudio by double clicking on it’s icon, as we would with other software on our computers.  If this is the first time you have opened it, the entire left pane will be taken up by something called the <code class="highlighter-rouge">Console</code> that you can see as the left hand panel in the figure below:</p>

<p><img src="../fig/Rstudio_blank.png" alt="stuff" /></p>

<p><span style="color:magenta">Do we want a screen shot of this instead of the R code?  Or will this be enough of a “following along” type of thing that that sort of thing isn’t necessary?</span></p>

<p>This has a prompt where commands can be entered.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="m">5</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="m">7</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## [1] 12
</code></pre></div></div>

<!-- JPN: here is a test plot you can uncomment if you wanna try it
I'm gonna trya thing


```r
plot(c(1,2,3), c(4,5,6))
```

![plot of chunk unnamed-chunk-2](../figure/unnamed-chunk-2-1.png)
-->

<!-- JPN: this is just a test to see if I get what is going on here

```r
data = read.csv('data/fertilizer_use.csv')
print(head(data))
```

```
##   Year Crop Nitrogen Phosphate Potash
## 1 1964 Corn     1623      1053    829
## 2 1965 Corn     2151      1336   1204
## 3 1966 Corn     2596      1626   1513
## 4 1967 Corn     3044      1857   1750
## 5 1968 Corn     3116      1855   1778
## 6 1969 Corn     3287      1789   1765
```
-->

<h2 id="variables-in-r">Variables in R</h2>

<ol>
  <li>what is a variable? Vocab: <em>variable</em></li>
  <li>how do we assign a variable? Vocab: <em>assign</em></li>
  <li>What can we do with this variable? -&gt; Generic manipulations (addition, multiplication, etc)
    <ul>
      <li>for this, use a “real world” thing that farmers might be into… something something nitrogen levels?</li>
    </ul>
  </li>
  <li>Talk about how this variable now shows up in the data area and have a screen shot of where that is</li>
</ol>

<h2 id="writing-and-savings-r-scripts">Writing and Savings R Scripts</h2>

<ol>
  <li>Analogy - scripting is like writing a set of instructions, a letter, something. Vocab: <em>scripts/scripting</em></li>
  <li>Where do we write scripts in RStudio - screen shot of window, a screen shot of what to do if there is only the console and no script - how do you open a script interface</li>
  <li>Redo stuff with variable in script (nitrogen levels calculation), but call it something different</li>
  <li>How to run a script - Run vs. Source -&gt; they are in the same place!  Screenshot of this. Vocab: <em>running a script</em></li>
  <li>Point out that it shows up in the data-listing place</li>
  <li><del>How do we find out the value of our new variable that we wrote in a script?</del>
    <ol>
      <li><del>Using the console like before - because in RStudio the console and scripting interface are linked! (this is not true in other things like PyCharm… this is slightly an aside though so use an aside thing)</del></li>
      <li><del>Using a print statement - emphasize that you <em>have</em> to use print in the script to see the variable!</del></li>
    </ol>
  </li>
  <li>How to save our script -&gt; where does it save to?</li>
  <li>Closing and re-opening a script to re-run.</li>
</ol>

<h2 id="optional-what-is-a-function">OPTIONAL: What is a function?</h2>

<p><span style="color:magenta">Not 100% sure we want to go into this much detail, but we could do a thing here where we put everything we just did with our variable into a function.  I think this might be too much at this point, and maybe if we get them into writing their own functions we can circle back around to this.</span></p>

<h2 id="getting-your-data-into-r">Getting your data into R</h2>

<ol>
  <li>Let’s talk about the dataset we are going to use here – facts about this dataset</li>
  <li>This is what this dataset looks like (show snapshot of csv)</li>
  <li>To get this data into R where we can do math to it like we did with our variable above we have to do something called “reading in our data”.  To do this, we’ll use something called a <em>function</em> to assign a variable the value of this table – i.e. we want a variable that will store all the rows and columns of our dataset
    <ul>
      <li>Talk a bit about what a function is here – omelets? Vocab: <em>function</em></li>
      <li>we also have to talk about the fact that we give the file name as a parameter to this function. Vocab: <em>function parameter</em></li>
    </ul>
  </li>
</ol>

<h3 id="explore-your-data-in-r-could-be-part-of-previous-or-own-thing-not-sure">Explore your data in R (could be part of previous or own thing, not sure)</h3>

<ol>
  <li>Another function example: using <code class="highlighter-rouge">str()</code> to look at your data real quick</li>
  <li>Also show how to look at your data in R (like “View(data)”)? Maybe?  Or you can click on it?</li>
</ol>

<h2 id="doing-stuff-with-data-in-r-better-name-obvs">Doing stuff with data in R (better name obvs)</h2>

<ol>
  <li>Your data is stored as a special thing called a dataframe - explain what this is. Vocab: <em>dataframe</em></li>
  <li>We can access the columns of your tabular dataset with a $ thing</li>
  <li>We can access the rows of your tabular dataset with … (not sure we wanna do this)</li>
  <li>We can manipulate columns with functions
    <ul>
      <li>example: min function (or something)</li>
      <li>How to learn about functions you might want to use? –&gt; teach googling &amp; how to look up info about functions in R</li>
    </ul>
  </li>
</ol>

:ET