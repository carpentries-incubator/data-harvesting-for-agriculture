I"BN<blockquote class="textchunk">
  <h2 id="trial-design">Trial Design</h2>
  <p>To determine the most cost effective seed and fertilizer rates in a given field, we need to figure out:</p>
  <ul>
    <li>How much seed and nitrogen am I applying in this field now?</li>
    <li>How much does seed and nitrogen currently cost me?</li>
    <li>Should I apply more seed and/or nitrogen to improve yield?</li>
    <li>Could I apply less seed and/or nitrogen without reducing yield?</li>
  </ul>

  <p>How do I minimize the cost of inputs (seed and nitrogen) while maximizing yield (bushels per acre) at the current cost of seed and nitrogen?</p>

  <p>In order to help figure this out, we create a grid over the field in which we combine areas of high, medium, and low rates of seed and fertilizer independently of each other. Some of the potential variations on this grid include:</p>
  <ul>
    <li>High seed and high fertilizer</li>
    <li>Low seed and high fertilizer</li>
    <li>Low seed and low fertilizer</li>
    <li>Several middle-points between any of these combinations</li>
  </ul>

  <p>Then we look at differences in yield data in the different areas of the field to determine:</p>
  <ul>
    <li>Whether more seed and more fertilizer made enough of a difference to be significant</li>
    <li>Where the most cost-effective seed and fertilizer rates are at the current prices of seed and nitrogen</li>
  </ul>

  <p>For the next step, we will design our own experiments on the sample field. The only files we will need for the trial design are the boundary file and ab line.</p>

</blockquote>

<blockquote class="textchunk">
  <h2 id="read-and-transform-shape-files">Read and transform shape files</h2>

  <p>We will start by reading in the shape files we need:</p>

  <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">boundary</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">st_read</span><span class="p">(</span><span class="s2">"data/boundary.gpkg"</span><span class="p">)</span><span class="w"> </span><span class="c1"># read in boundary</span><span class="w">
</span></code></pre></div>  </div>

  <div class="output highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Reading layer `boundary' from data source `/Users/jillnaiman/trial-lesson_ag/_episodes_rmd/data/boundary.gpkg' using driver `GPKG'
Simple feature collection with 1 feature and 0 fields
geometry type:  POLYGON
dimension:      XY
bbox:           xmin: -82.87853 ymin: 40.83945 xmax: -82.87306 ymax: 40.8466
epsg (SRID):    4326
proj4string:    +proj=longlat +datum=WGS84 +no_defs
</code></pre></div>  </div>

  <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">abline</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">st_read</span><span class="p">(</span><span class="s2">"data/abline.gpkg"</span><span class="p">)</span><span class="w"> </span><span class="c1"># read in AB line</span><span class="w">
</span></code></pre></div>  </div>

  <div class="output highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Reading layer `abline' from data source `/Users/jillnaiman/trial-lesson_ag/_episodes_rmd/data/abline.gpkg' using driver `GPKG'
Simple feature collection with 1 feature and 1 field
geometry type:  LINESTRING
dimension:      XY
bbox:           xmin: -82.87334 ymin: 40.84301 xmax: -82.87322 ymax: 40.84611
epsg (SRID):    4326
proj4string:    +proj=longlat +datum=WGS84 +no_defs
</code></pre></div>  </div>

  <p>Now let’s check the coordinate references of our two files:</p>

  <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">st_crs</span><span class="p">(</span><span class="n">boundary</span><span class="p">)</span><span class="w">
</span></code></pre></div>  </div>

  <div class="output highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Coordinate Reference System:
  EPSG: 4326 
  proj4string: "+proj=longlat +datum=WGS84 +no_defs"
</code></pre></div>  </div>

  <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">st_crs</span><span class="p">(</span><span class="n">abline</span><span class="p">)</span><span class="w">
</span></code></pre></div>  </div>

  <div class="output highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Coordinate Reference System:
  EPSG: 4326 
  proj4string: "+proj=longlat +datum=WGS84 +no_defs"
</code></pre></div>  </div>
  <p>Since both of these are in lat/long and we want them in UTM, we’ll transform them:</p>

  <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">trialarea</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">st_transform_utm</span><span class="p">(</span><span class="n">boundary</span><span class="p">)</span><span class="w">
</span><span class="n">abline_utm</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">st_transform_utm</span><span class="p">(</span><span class="n">abline</span><span class="p">)</span><span class="w">
</span></code></pre></div>  </div>

</blockquote>

<blockquote class="textchunk">
  <h1 id="designing-trials">Designing trials</h1>

  <p>We need decide on the details of experiment design before we get into any of the code.  Relative parameters we need for the trial design include:</p>
  <ul>
    <li>plot dimensions</li>
    <li>number of treatments</li>
    <li>types of treatments, and</li>
    <li>treatment range.</li>
  </ul>

  <h3 id="defining-parameters">Defining Parameters</h3>
  <p>In the following code, we are simply going to assign values to all the parameters that might be involved in the trial design. In this way, if we ever want to change any parameters, we can do it here, and need not to worry about the consistency for the whole code.</p>

  <p>Now let’s design our grid with the following parameters:</p>

  <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">width_in_meters</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">24</span><span class="w"> </span><span class="c1"># width of grids is 24 meters</span><span class="w">
</span><span class="n">long_direction</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s1">'NS'</span><span class="w"> </span><span class="c1"># direction of grid that will be long</span><span class="w">
</span><span class="n">short_direction</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s1">'EW'</span><span class="w"> </span><span class="c1"># direction of grid that will be short</span><span class="w">
</span><span class="n">length_in_ft</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">180</span><span class="w"> </span><span class="c1"># length of grids in feet</span><span class="w">
</span></code></pre></div>  </div>

  <h3 id="make-grids">Make Grids</h3>
  <p>We’ll use our <code class="highlighter-rouge">make_grids</code> again function to generate this trial’s grid:</p>

  <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">width</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">m_to_ft</span><span class="p">(</span><span class="m">24</span><span class="p">)</span><span class="w"> </span><span class="c1"># convert meters to feet</span><span class="w">
</span><span class="n">design_grids_utm</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">make_grids</span><span class="p">(</span><span class="n">trialarea</span><span class="p">,</span><span class="w"> </span><span class="n">abline_utm</span><span class="p">,</span><span class="w">
             </span><span class="n">long_in</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">long_direction</span><span class="p">,</span><span class="w">
			       </span><span class="n">short_in</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">short_direction</span><span class="p">,</span><span class="w">
			       </span><span class="n">length_ft</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">length_in_ft</span><span class="p">,</span><span class="w">
			       </span><span class="n">width_ft</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">width</span><span class="p">)</span><span class="w">
</span></code></pre></div>  </div>
  <p>Next we want to make sure the coordinate reference frame of our <code class="highlighter-rouge">trialarea</code> is the same as our <code class="highlighter-rouge">design_grids_utm</code> grids and then take the intersection of these grids with our trial area as we did previously:</p>

  <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">st_crs</span><span class="p">(</span><span class="n">design_grids_utm</span><span class="p">)</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">st_crs</span><span class="p">(</span><span class="n">trialarea</span><span class="p">)</span><span class="w">
</span><span class="n">trial_grid</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">st_intersection</span><span class="p">(</span><span class="n">trialarea</span><span class="p">,</span><span class="w"> </span><span class="n">design_grids_utm</span><span class="p">)</span><span class="w">
</span></code></pre></div>  </div>

  <div class="warning highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Warning: attribute variables are assumed to be spatially constant throughout all
geometries
</code></pre></div>  </div>

  <p>Let’s check out what our trial subplots look like:</p>

  <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">tm_shape</span><span class="p">(</span><span class="n">trial_grid</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">tm_borders</span><span class="p">(</span><span class="n">col</span><span class="o">=</span><span class="s1">'blue'</span><span class="p">)</span><span class="w">
</span></code></pre></div>  </div>

  <p><img src="../fig/rmd-t3jpn-1.png" title="plot of chunk t3jpn" alt="plot of chunk t3jpn" width="612" style="display: block; margin: auto;" /></p>

</blockquote>

<blockquote class="textchunk">
  <h2 id="determining-subplot-treatments">Determining subplot treatments</h2>

  <p>Now that we have the trial design plots, we need to assign different treatments to each plot.  We can use the <code class="highlighter-rouge">treat_assign</code> function from <code class="highlighter-rouge">functions.R</code> to randomly assign seed rates and nitrogen rates to each plot on our grid.</p>

  <p>We’ll select 4 different seed rates and 4 different nitrogen rates to deposit randomly on our grid:</p>

  <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">seed_rates</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="m">31000</span><span class="p">,</span><span class="w"> </span><span class="m">34000</span><span class="p">,</span><span class="w"> </span><span class="m">37000</span><span class="p">,</span><span class="w"> </span><span class="m">40000</span><span class="p">)</span><span class="w">
</span><span class="n">nitrogen_rates</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="m">160</span><span class="p">,</span><span class="m">200</span><span class="p">,</span><span class="m">225</span><span class="p">,</span><span class="m">250</span><span class="p">)</span><span class="w">
</span></code></pre></div>  </div>
  <p>The <code class="highlighter-rouge">seed_quo</code> and <code class="highlighter-rouge">nitrogen_quo</code> are the rates that will be applied to the headlands that are not part of the trial.</p>

  <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">seed_quo</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="m">37000</span><span class="w">
</span><span class="n">nitrogen_quo</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="m">225</span><span class="w">
</span></code></pre></div>  </div>

</blockquote>

<blockquote class="textchunk">
  <h1 id="generating-treatment-map">Generating Treatment Map</h1>
  <p>We are now ready to generate our treatment plot:</p>

  <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">whole_plot</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">treat_assign</span><span class="p">(</span><span class="n">trialarea</span><span class="p">,</span><span class="w"> </span><span class="n">trial_grid</span><span class="p">,</span><span class="w"> </span><span class="n">head_buffer_ft</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">width</span><span class="p">,</span><span class="w">
                           </span><span class="n">seed_treat_rates</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">seed_rates</span><span class="p">,</span><span class="w">
			   </span><span class="n">nitrogen_treat_rates</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">nitrogen_rates</span><span class="p">,</span><span class="w">
			   </span><span class="n">seed_quo</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">seed_quo</span><span class="p">,</span><span class="w">
			   </span><span class="n">nitrogen_quo</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">nitrogen_quo</span><span class="p">)</span><span class="w">
</span></code></pre></div>  </div>

</blockquote>

<blockquote class="textchunk">
  <h2 id="mapping-trial">Mapping Trial</h2>
  <p>Let’s look at what our trial looks like.  First, as a shape file:</p>

  <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">head</span><span class="p">(</span><span class="n">whole_plot</span><span class="p">)</span><span class="w">
</span></code></pre></div>  </div>

  <div class="output highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Simple feature collection with 6 features and 4 fields
geometry type:  POLYGON
dimension:      XY
bbox:           xmin: 342043.5 ymin: 4523203 xmax: 342066.9 ymax: 4523349
epsg (SRID):    32617
proj4string:    +proj=utm +zone=17 +datum=WGS84 +units=m +no_defs
   id treat_type NRATE SEEDRATE                           geom
1 ID1         17   225    37000 POLYGON ((342066.7 4523313,...
2 ID2         17   225    37000 POLYGON ((342066.7 4523313,...
3 ID3         10   225    34000 POLYGON ((342066.5 4523258,...
4 ID4         11   225    37000 POLYGON ((342066.5 4523258,...
5 ID5          6   200    34000 POLYGON ((342066.2 4523203,...
6 ID6          5   200    31000 POLYGON ((342066.2 4523203,...
</code></pre></div>  </div>
  <p>And as plots:</p>

  <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">nitrogen_plot</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">map_poly</span><span class="p">(</span><span class="n">whole_plot</span><span class="p">,</span><span class="w"> </span><span class="s2">"NRATE"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Nitrogen Treatment"</span><span class="p">)</span><span class="w">
</span><span class="n">seed_plot</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">map_poly</span><span class="p">(</span><span class="n">whole_plot</span><span class="p">,</span><span class="w"> </span><span class="s2">"SEEDRATE"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Seedrate Treatment"</span><span class="p">)</span><span class="w">
</span><span class="n">treatment_plot_comp</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">tmap_arrange</span><span class="p">(</span><span class="n">nitrogen_plot</span><span class="p">,</span><span class="w"> </span><span class="n">seed_plot</span><span class="p">,</span><span class="w"> </span><span class="n">ncol</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">2</span><span class="p">,</span><span class="w"> </span><span class="n">nrow</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">1</span><span class="p">)</span><span class="w">
</span><span class="n">treatment_plot_comp</span><span class="w">
</span></code></pre></div>  </div>

  <p><img src="../fig/rmd-unnamed-chunk-11-1.png" title="plot of chunk unnamed-chunk-11" alt="plot of chunk unnamed-chunk-11" width="612" style="display: block; margin: auto;" /></p>

</blockquote>

<!-- Test
Brittani testing whether I'm the problem with the rendering
-->
<!-- JPN takes out

~~~
whole_plot <- treat_assign(trialarea, trial_grid, head_buffer_ft = width, seed_treat_rates = c(31000, 34000, 37000, 40000), nitrogen_treat_rates = c(160,200,225,250), seed_quo = 37000, nitrogen_quo = 225)
map_poly(whole_plot, "NRATE", "Nitrogen Treatment")
~~~
{: .language-r}

<img src="../fig/rmd-assigning treatment rates-1.png" title="plot of chunk assigning treatment rates" alt="plot of chunk assigning treatment rates" width="612" style="display: block; margin: auto;" />

~~~
head(whole_plot)
~~~
{: .language-r}



~~~
Simple feature collection with 6 features and 4 fields
geometry type:  POLYGON
dimension:      XY
bbox:           xmin: 342043.5 ymin: 4523203 xmax: 342066.9 ymax: 4523349
epsg (SRID):    32617
proj4string:    +proj=utm +zone=17 +datum=WGS84 +units=m +no_defs
   id treat_type NRATE SEEDRATE                           geom
1 ID1         17   225    37000 POLYGON ((342066.7 4523313,...
2 ID2         17   225    37000 POLYGON ((342066.7 4523313,...
3 ID3          6   200    34000 POLYGON ((342066.5 4523258,...
4 ID4          6   200    34000 POLYGON ((342066.5 4523258,...
5 ID5          8   200    40000 POLYGON ((342066.2 4523203,...
6 ID6         16   250    40000 POLYGON ((342066.2 4523203,...
~~~
{: .output}
The function will automatically take out 


~~~
# infield <- st_buffer(boundary.utm, -plot_width_meter)
# outfield <- st_difference(boundary.utm, infield)
# 
# infield$dummy <- 1
# outfield$dummy <- 0
# bothfields <- rbind(infield, outfield)
# newfield <- subset(bothfields, dummy == 1)
~~~
{: .language-r}


###eg plot


~~~
ggplot(data = whole_plot, aes(x=long,y=lat,group=group)) +
  geom_polygon(aes(fill=factor(NRATE))) +
  scale_fill_brewer(palette = 'Greens') 
~~~
{: .language-r}



~~~
Error in FUN(X[[i]], ...): object 'long' not found
~~~
{: .error}

<img src="../fig/rmd-unnamed-chunk-13-1.png" title="plot of chunk unnamed-chunk-13" alt="plot of chunk unnamed-chunk-13" width="612" style="display: block; margin: auto;" />
-->
:ET