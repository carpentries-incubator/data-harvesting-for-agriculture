I"±<h2 id="glossary">Glossary</h2>

<dl>
  <dt id="argument">argument</dt>
  <dd>A value given to a function or program when it runs. The term is often used interchangeably
(and inconsistently) with <a href="#parameter">parameter</a>.</dd>
  <dt id="call-stack">call stack</dt>
  <dd>A data structure inside a running program that keeps track of active function calls. Each call‚Äôs
variables are stored in a <a href="#stack-frame">stack frame</a>; a new stack frame is put on top of the stack
for each call, and discarded when the call is finished.</dd>
  <dt id="comma-separated-values-csv">comma-separated values (CSV)</dt>
  <dd>A common textual representation for tables in which the values in each row are separated by commas.</dd>
  <dt id="comment">comment</dt>
  <dd>A remark in a program that is intended to help human readers understand what is going on, but is
ignored by the computer. Comments in Python, R, and the Unix shell start with a <code class="highlighter-rouge">#</code> character and run
to the end of the line; comments in SQL start with <code class="highlighter-rouge">--</code>, and other languages have other conventions.</dd>
  <dt id="conditional-statement">conditional statement</dt>
  <dd>A statement in a program that might or might not be executed depending on whether a test is true
or false.</dd>
  <dt id="dimensions-of-an-array">dimensions (of an array)</dt>
  <dd>An array‚Äôs extent, represented as a vector. For example, an array with 5 rows and 3 columns has
dimensions <code class="highlighter-rouge">(5,3)</code>.</dd>
  <dt id="documentation">documentation</dt>
  <dd>Human-language text written to explain what software does, how it works, or how to use it.</dd>
  <dt id="encapsulation">encapsulation</dt>
  <dd>The practice of hiding something‚Äôs implementation details so that the rest of a program can
worry about <em>what</em> it does rather than <em>how</em> it does it.</dd>
  <dt id="for-loop">for loop</dt>
  <dd>A loop that is executed once for each value in some kind of set, list, or range. See also:
<a href="#while-loop">while loop</a>.</dd>
  <dt id="function-body">function body</dt>
  <dd>The statements that are executed inside a function.</dd>
  <dt id="function-call">function call</dt>
  <dd>A use of a function in another piece of software.</dd>
  <dt id="function-composition">function composition</dt>
  <dd>The immediate application of one function to the result of another, such as <code class="highlighter-rouge">f(g(x))</code>.</dd>
  <dt id="index">index</dt>
  <dd>A subscript that specifies the location of a single value in a collection, such as a single
pixel in an image.</dd>
  <dt id="loop-variable">loop variable</dt>
  <dd>The variable that keeps track of the progress of the loop.</dd>
  <dt id="notional-machine">notional machine</dt>
  <dd>An abstraction of a computer used to think about what it can and will do.</dd>
  <dt id="parameter">parameter</dt>
  <dd>A variable named in the function‚Äôs declaration that is used to hold a value passed into the call.
The term is often used interchangeably (and inconsistently) with <a href="#argument">argument</a>.</dd>
  <dt id="pipe">pipe</dt>
  <dd>A connection from the output of one program to the input of another. When two or more programs
are connected in this way, they are called a ‚Äúpipeline‚Äù.</dd>
  <dt id="return-statement">return statement</dt>
  <dd>A statement that causes a function to stop executing and return a value to its caller immediately.</dd>
  <dt id="silent-failure">silent failure</dt>
  <dd>Failing without producing any warning messages. Silent failures are hard to detect and debug.</dd>
  <dt id="slice">slice</dt>
  <dd>A regular subsequence of a larger sequence, such as the first five elements or every second element.</dd>
  <dt id="stack-frame">stack frame</dt>
  <dd>A data structure that provides storage for a function‚Äôs local variables. Each time a function is
called, a new stack frame is created and put on the top of the <a href="#call-stack">call stack</a>. When the
function returns, the stack frame is discarded.</dd>
  <dt id="standard-input-stdin">standard input (stdin)</dt>
  <dd>A process‚Äôs default input stream. In interactive command-line applications, it is typically
connected to the keyboard; in a <a href="#pipe">pipe</a>, it receives data from the
<a href="#standard-output-stdout">standard output</a> of the preceding process.</dd>
  <dt id="standard-output-stdout">standard output (stdout)</dt>
  <dd>A process‚Äôs default output stream. In interactive command-line applications, data sent to
standard output is displayed on the screen; in a <a href="#pipe">pipe</a>, it is passed to the
<a href="#standard-input-stdin">standard input</a> of the next process.</dd>
  <dt id="string">string</dt>
  <dd>Short for ‚Äúcharacter string‚Äù, a sequence of zero or more characters.</dd>
  <dt id="while-loop">while loop</dt>
  <dd>A loop that keeps executing as long as some condition is true. See also: <a href="#for-loop">for loop</a>.</dd>
</dl>
:ET